FROM node:lts-alpine as builder

ARG HOST_TYPE=local

ENV HOST_TYPE=$HOST_TYPE

RUN mkdir -p /usr/src/app && chown node:node /usr/src/app

RUN npm install -g npm@latest

USER node

WORKDIR /usr/src/app

COPY --chown=node:node package*.json ./

COPY --chown=node:node .npmrc ./

RUN npm ci

COPY --chown=node:node . ./

RUN npm run build

FROM nginx:stable-alpine

RUN mkdir -p /var/www/credit-report-web-container-poc.dev.ctmers.io && \
  mkdir -p /var/run/nginx && \
  chown -R nobody:nobody /var/log/nginx /var/cache/nginx /etc/nginx /var/run/nginx /var/www/credit-report-web-container-poc.dev.ctmers.io

COPY --from=builder --chown=nobody:nobody /usr/src/app/dist /var/www/credit-report-web-container-poc.dev.ctmers.io

COPY credit-report-web-container-poc.dev.ctmers.io.pem /etc/ssl/certs/credit-report-web-container-poc.dev.ctmers.io.pem

COPY credit-report-web-container-poc.dev.ctmers.io-key.pem /etc/ssl/private/credit-report-web-container-poc.dev.ctmers.io-key.pem

COPY --chown=nobody:nobody nginx/self-signed.conf /etc/nginx/snippets/self-signed.conf

COPY --chown=nobody:nobody nginx/ssl-params.conf /etc/nginx/snippets/ssl-params.conf

COPY --chown=nobody:nobody nginx/default.dev.conf /etc/nginx/conf.d/default.conf

COPY --chown=nobody:nobody nginx/nginx.conf /etc/nginx/nginx.conf

EXPOSE 80

EXPOSE 443

USER nobody

CMD [ "nginx", "-g", "daemon off;" ]
